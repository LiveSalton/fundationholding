if (isModule.toBoolean()) {
    apply plugin: 'com.android.application'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'kotlin-android-extensions'
} else {
    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'kotlin-android-extensions'
}
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        flavorDimensions versionName
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86"
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        buildConfigField "String", "bizType", "\"${rootProject.ext.dependVersion.bizType}\""
    }
    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    exclude 'debug/**'
                }
            }
        }
    }
    dataBinding {
        enabled true
    }
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //必须要保证所有的flavor 都属于同一个维度
    flavorDimensions "default"
    println("projectName:" + project.getName())
}
dependencies {
    // 依赖 libs 目录下所有 jar 包
    api fileTree(include: ['*.jar'], dir: 'libs')
    // 依赖 libs 目录下所有 aar 包
    api fileTree(include: ['*.aar'], dir: 'libs')
    api project(':lib_common')
    api project(':lib_api')
    api rootProject.ext.supportLibs
    api rootProject.ext.otherDependenciesLibs
    kapt rootProject.ext.compilerDependenciesLibs
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}